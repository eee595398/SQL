
--1.
-- 춘 기술대학교의 학과 이름과 계열을 표시하시오
-- 단, 출력 헤더는 "학과 명", "계열"으로 표시하도록 한다.
SELECT DEPARTMENT_NAME"학과 명", CATEGORY "계열" 
FROM TB_DEPARTMENT;


--2. *
-- 학과의 학과 정원을 다음과같은 형태로 화면에 출력한다.

SELECT DEPARTMENT_NAME || '의 정원은' || CAPACITY || '명입니다.' "학과별 정원"  
FROM TB_DEPARTMENT;


--3.

SELECT STUDENT_NAME 
FROM TB_STUDENT
WHERE DEPARTMENT_NO IN (001)
AND ABSENCE_YN = 'Y' AND SUBSTR( STUDENT_SSN, 8,1)=2;


--4.
SELECT  STUDENT_NAME 
FROM TB_STUDENT
WHERE  STUDENT_NO IN ('A513079','A513090','A513091','A513110','A513119');


--5.

SELECT DEPARTMENT_NAME, CATEGORY  
FROM TB_DEPARTMENT
WHERE CAPACITY  BETWEEN 20 AND 30;


--6.
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL; 


--7.
SELECT STUDENT_NAME 
FROM TB_STUDENT ts 
WHERE DEPARTMENT_NO IS NULL;


--8.
SELECT CLASS_NO 
FROM TB_CLASS tc 
WHERE PREATTENDING_CLASS_NO IS NOT NULL;


--9.

SELECT DISTINCT CATEGORY 
FROM TB_DEPARTMENT;


--10.**

SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN 
FROM TB_STUDENT 
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) = 2002
AND STUDENT_ADDRESS LIKE '전주%'
AND ABSENCE_YN = 'N';





-------------



---함수

--1.


SELECT STUDENT_NO "학번", STUDENT_NAME "이름", SUBSTR(ENTRANCE_DATE, 0)"입학년도"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 002;


--2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN 
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME LIKE '____%'
OR PROFESSOR_NAME NOT LIKE '___%'


--3.

SELECT PROFESSOR_NAME "교수이름", 100 - SUBSTR(PROFESSOR_SSN, 1,2)+8 "나이" 
FROM TB_PROFESSOR 
WHERE SUBSTR(PROFESSOR_SSN,8,1) = 1
ORDER BY 2 ASC;


--4.
SELECT SUBSTR(PROFESSOR_NAME,2,2) "이름"
FROM TB_PROFESSOR



--5.TB_CLASS ****
-- 춘 기술대학교의 재수생 입학자를 구하려고 한다 어떻게 찾아낼 거인가?
-- 이때, 19살에 입학하면 재수를 하지 않은 것으로 간주한다.
SELECT STUDENT_NO, STUDENT_NAME 
FROM TB_STUDENT 
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE)
 - EXTRACT(YEAR FROM TO_DATE('19'||SUBSTR(STUDENT_SSN, 1, 6))) > 19;



  
  
 ----6 **
  
SELECT TO_CHAR(TO_DATE('2020-12-25'), 'DAY') FROM DUAL;


--- 7 

--- 2099년 10월 11일, 2049년10월 11일, 
--- 1999년 10월 11일, 1949년 10월 11일


--8 *

SELECT STUDENT_NO, STUDENT_NAME 
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%';


--9 **
-- 학번이 A517178인 한아름 학생의 학점 총 평점을 구하는 SQL문을 작성하시오.
-- 단, 이때 출력 화면의 헤더는 "평점"이라고 찍히게 하고, 점수는 반올림하여 소수점 이하 한자리까지만 표시한다.
SELECT ROUND(AVG(POINT), 1) 평점
FROM TB_GRADE 
WHERE STUDENT_NO IN ('A517178')



-- 10

SELECT DEPARTMENT_NO "학과번호", COUNT(STUDENT_NO)"학생수"  
FROM TB_STUDENT 
GROUP BY DEPARTMENT_NO
ORDER BY 1



----


-- 1

SELECT STUDENT_NAME"학생이름", STUDENT_ADDRESS"주소지" 
FROM TB_STUDENT
ORDER BY 1


-- 2 


SELECT STUDENT_NAME, STUDENT_SSN 
FROM TB_STUDENT ts 
WHERE ABSENCE_YN IN ('Y')
ORDER BY 2 DESC 



-- 3

SELECT STUDENT_NAME"학생이름", STUDENT_NO"학번",STUDENT_ADDRESS"거주지 주소"  
FROM TB_STUDENT
WHERE STUDENT_NO LIKE '9%' 
AND STUDENT_ADDRESS LIKE '경기도%' OR STUDENT_ADDRESS LIKE '강원도%'
ORDER BY 1


-- 4 


SELECT PROFESSOR_NAME, PROFESSOR_SSN 
FROM TB_PROFESSOR
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME IN '법학과'
ORDER BY 2


--5***

SELECT STUDENT_NO,POINT 
FROM TB_STUDENT
JOIN TB_GRADE USING( STUDENT_NO)
WHERE CLASS_NO IN 'C3118100'
AND TERM_NO IN '200402'
ORDER BY 2 DESC 


--6

SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME 
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY  2


-- 7
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_DEPARTMENT
JOIN TB_CLASS USING (DEPARTMENT_NO)


--8 ***
-- 과목별 교수 이름을 찾으려고 한다. 과목 이름과 교수 이름을 출력하는 SQL문을 작성하시오.
-- (결과 행의 수만 동일하게 조회)
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS 
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO);


--9 


SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_PROFESSOR
JOIN TB_CLASS USING (DEPARTMENT_NO)
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR  USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE CATEGORY = '인문사회'

--10 ***
-- '음악학과' 학생들의 평점을 구하려고 한다. 음악학과 학생들의 "학번", "학생 이름", "전체 평점"을 출력하는 SQL 문장을 작성하시오.
-- (단, 평점은 소수점 1자리까지만 반올림하여 표시한다.)
SELECT STUDENT_NO, STUDENT_NAME, ROUND(AVG(POINT),1) "전체평점" 
FROM TB_STUDENT 
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME;

-- 11 **
-- 학번이 A313047인 학생이 학교에 나오고 있지 않다. 지도 교수에게 내용을 전달하기 위한 학과 이름, 학생 이름과 지도 교수 이름이 필요하다.
-- 이때 사용할 SQL문을 작성하시오
SELECT DEPARTMENT_NAME "학과이름", TB_STUDENT 학생이름, TB_PROFESSOR_NAME 지도교수이름
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_PROFESSOR P ON(S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';


-- 12 
-- 2007년도에 '인간관계론' 과목을 수강한 학생을 찾아 학생이름과 수강학기를 표시하는 SQL 문장을 작성하시오.

SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
JOIN TB_CLASS USING (CLASS_NO)
WHERE CLASS_NAME  = '인간관계론'
AND TERM_NO LIKE '2007%'

--13 ***
-- 예체능 계열 과목 중 과목 담당교수를 한 명도 배정받지 못한 과목을 찾아 
-- 그 과목 이름과 학과 이름을 출력하는 SQL 문장을 작성하시오.
-- (결과 행의 수만 동일하게 조회)

SELECT CLASS_NAME, DEPARTMENT_NAME 
FROM TB_CLASS
LEFT JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY IN '예체능'
AND PROFESSOR_NO IS NULL;


-- 14 ***
-- 춘 기술대학교 서반아어학과 학생들의 지도교수를 게시하고자 한다. 
-- 학생이름과 지도교수 이름을 찾고 만일 지도 교수가 없는 학생일 경우
-- "지도교수 미지정"으로 표시하도록 하는 SQL 문을 작성하시오.
-- 단 출력헤더는 "학생이름", "지도교수"로 표시하며 고학번 학생이 먼저 표시되도록 한다.

SELECT STUDENT_NAME 학생이름, NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON(S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON(S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;

-- 15 ***
-- 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생을 찾아 그 학생의 학번, 이름, 학과, 이름, 평점을 출력하는 SQL문을 작성하시오.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NO, POINT 
FROM TB_STUDENT 
JOIN TB_GRADE USING (STUDENT_NO)
WHERE ABSENCE_YN = 'N'
AND POINT>=4
HAVING AVG(POINT) >= 4


-- 16 ***
-- 환경조경학과 전공과목들의 과목 별 평점을 파악할 수 있는 SQL 문을 작성하시오.
SELECT CLASS_NO, CLASS_NAME, AVG(POINT) 
FROM TB_CLASS T2 
JOIN TB_GRADE T1 USING (CLASS_NO)


-- 17 ***
-- 춘 기술대학교에 다니고 있는 최경희 학생과 같은 과 학생들의 이름과 주소를 출력하는 SQL 문을 작성하시오.
SELECT STUDENT_NAME, STUDENT_ADDRESS 
FROM TB_STUDENT 
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO 
FROM TB_STUDENT WHERE STUDENT_NAME = '최경희');
              
-- 18***
-- 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번을 표시하는 SQL문을 작성하시오
SELECT STUDENT_NO, STUDENT_NAME 
FROM TB_STUDENT
JOIN TB_GRADE USING(STUDENT_NO)
WHERE MAX(POINT) FROM TB_STUDENT


--19 
-- 춘 기술대학교의 "환경조경학과"가 속한 같은 계열 학과들의 학과 별 전공과목 평점을 파악하기 위한 적절한 SQL문을 찾아내시오.
-- 단, 출력헤더는 "계열 학과명", "전공평점"으로 표시되도록 하고, 평점은 소수점 한자리까지만 반올림하여 표시되도록 한다.

SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT),1) 전공평점
FROM TB_DEPARTMENT 
JOIN TB_CLASS USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(CLASS_NO)
WHERE CATEGORY = (SELECT CATEGORY
                  FROM TB_DEPARTMENT
                  WHERE DEPARTMENT_NAME = '환경조경학과')
AND CLASS_TYPE LIKE '전공%'
GROUP BY DEPARTMENT_NAME
ORDER BY 1;





